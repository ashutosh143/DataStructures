

/**
*
* @author techieExpress
*
* Given n non-negative integers representing an elevation map where the width of each bar is 1, 
* compute how much water it can trap after raining.
*
**/

public class findWater {

public static int findTotalWater(int[] arr, int n) {
	
	
	int lmax[]=new int[n];
	int rmax[]=new int[n];
	int water=0;
	
	// calculate left max height of walls at each index
	lmax[0]=arr[0];
	for(int i=1;i<n;i++) {
		
		if(arr[i]>lmax[i-1]) {
			lmax[i]=arr[i];
		}
		else {
			
			lmax[i]=lmax[i-1];
		}
		
		
	}
	// calculate right max height of walls at each index
	rmax[n-1]=arr[n-1];
	for(int i=n-2;i>=0;i--) {
		
		if(arr[i]>rmax[i+1]) {
			
			rmax[i]=arr[i];
		}
		
		else {
			
			rmax[i]=rmax[i+1];
		}
		
		
	}
	//calculate the total amount of water at each index and add them up
	for(int i=0;i<n;i++) {
		
		water+=Math.min(lmax[i], rmax[i])-arr[i];
	}
	
	
	return water;
	
	
}

	// Driver program
	public static void main(String args[]) {
		int arr[] = { 2,1,3,1,0,2};
		int n = arr.length;
		System.out.println("Maximum water that can be accumulated is " + findTotalWater(arr, n));
		//return 0;
	}

}
